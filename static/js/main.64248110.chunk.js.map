{"version":3,"sources":["reducers/index.js","actions/index.js","components/Header.js","components/Form.js","components/PagePreview.js","data/styles.js","components/CodeOutput.js","components/App.js","index.js"],"names":["initialState","output","reducer","state","action","type","Header","React","Component","Form","renderField","input","label","className","meta","touched","error","placeholder","displayFields","templateArr","includes","props","templateSelect","handleSubmit","this","onSubmit","id","htmlFor","Field","name","component","value","FieldArray","fields","onClick","push","map","item","index","key","title","remove","section","asset","reduxForm","form","initialValues","siteTitle","heading","headerImage","subheading","assetThumb","bodyHeading","bodyContent","address1","address2","city","zipcode","phone","email","ctaText","ctaURL","cards","image","body","link","text","url","sections","navItems","connect","formValueSelector","PagePreview","htmlOutput","displayNavItems","list","val","undefined","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src","alt","style","backgroundImage","height","displaySections","siteTiel","ReactDOMServer","renderToStaticMarkup","concat","html","styles","CodeOutput","Prism","highlightAll","ClipboardJS","data-clipboard-target","css","lpForm","values","App","handleForm","window","location","hash","setState","showCodeOutput","backgroundColor","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.64248110.chunk.js","sourcesContent":["import { UPDATE_HTML } from \"../actions\";\n\nconst initialState = {\n  output: '',\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n      case UPDATE_HTML:\n        return {\n            output: action.output,\n      }\n      default:\n        return state\n    }\n}\n\nexport default reducer;\n\n","export const UPDATE_HTML = 'UPDATE_HTML';\n\n// action creator\nexport const updateHTMLOutput = (output) => {\n    return {\n        type: UPDATE_HTML,\n        output: output\n    }\n}","import React from \"react\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <h1>Landing Page Generator</h1>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field, FieldArray, formValueSelector } from \"redux-form\";\nimport \"./css/Form.scss\";\n\nclass Form extends React.Component {\n\n  render() {\n    const renderField = ({ input, label, type, className, meta: { touched, error } }) => (\n      <div className={ `dynamic-form__fields ${className}` }>\n        <div>\n          <input\n            {...input}\n            type={type}\n            placeholder={label}\n            className=\"input form-control\"\n          />\n          {touched && error && <span>{error}</span>}\n        </div>\n      </div>\n    );\n\n    const displayFields = (templateArr) => {\n      if (!templateArr.includes(this.props.templateSelect)) {\n        return \"d-none\";\n      } else {\n        return \"\";\n      }\n    };\n\n    const bulletList = ({ fields, meta: { error } }) => (\n      <ul className=\"dynamic-form bullet-list\">\n        <li>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary ml-auto\"\n            onClick={() => fields.push()}\n          >\n            Add Item\n          </button>\n        </li>\n        {fields.map((bulletItem, index) => (\n          <li key={index}>\n            <span className=\"bullet-list__number\">{index + 1}</span>\n            <Field\n              name={bulletItem}\n              type=\"text\"\n              placeholder=\"Page Title\"\n              component={renderField}\n              label={`Bullet Item #${index + 1}`}\n            />\n            <button\n              className=\"btn btn-danger btn-remove\"\n              type=\"button\"\n              title=\"Remove Bullet Item\"\n              onClick={() => fields.remove(index)}\n            >\n              &times;\n            </button>\n          </li>\n        ))}\n        {error && <li className=\"error\">{error}</li>}\n      </ul>\n    );\n\n    const renderCards = ({ fields, meta: { error } }) => (\n      \n      <ul className=\"dynamic-form cards-list\">\n        <li>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary ml-auto\"\n            onClick={() => fields.push()}\n          >\n            Add Asset\n          </button>\n        </li>\n        {fields.map((asset, index) => (\n          <li key={index}>\n            <span className=\"bullet-list__number\">{index + 1}</span>\n            <div className=\"dynamic-form__fields--container\">\n              <Field\n                name={`${asset}.title`}\n                type=\"text\"\n                placeholder=\"Card Title\"\n                component={renderField}\n                label={`Card Title #${index + 1}`}\n              />\n              <Field\n                name={`${asset}.image`}\n                type=\"text\"\n                placeholder=\"Card Image\"\n                component={renderField}\n                label={`Card Image #${index + 1}`}\n              />\n              <Field\n                name={`${asset}.link.text`}\n                type=\"text\"\n                placeholder=\"Card Link Text\"\n                component={renderField}\n                label={`Card Link Text #${index + 1}`}\n              />\n              <Field\n                name={`${asset}.link.url`}\n                type=\"text\"\n                placeholder=\"Card Link URL\"\n                component={renderField}\n                label={`Card Link URL #${index + 1}`}\n              />\n            </div>\n            <button\n              className=\"btn btn-danger btn-remove\"\n              type=\"button\"\n              title=\"Remove Card Item\"\n              onClick={() => fields.remove(index)}\n            >\n              &times;\n            </button>\n          </li>\n        ))}\n        {error && <li className=\"error\">{error}</li>}\n      </ul>\n    );\n\n    const renderNavItems = ({ fields, meta: { error } }) => (\n      \n      <ul className=\"dynamic-form cards-list\">\n        <li>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary ml-auto\"\n            onClick={() => fields.push()}\n          >\n            Add Nav Item\n          </button>\n        </li>\n        {fields.map((item, index) => (\n          <li key={index}>\n            <span className=\"bullet-list__number\">{index + 1}</span>\n            <div className=\"dynamic-form__fields--container\">\n            <Field\n                name={`${item}.item`}\n                type=\"text\"\n                placeholder=\"Nav Item\"\n                component={renderField}\n                label={`Nav Item #${index + 1}`}\n              />\n            </div>\n            <button\n              className=\"btn btn-danger btn-remove\"\n              type=\"button\"\n              title=\"Remove Card Item\"\n              onClick={() => fields.remove(index)}\n            >\n              &times;\n            </button>\n          </li>\n        ))}\n        {error && <li className=\"error\">{error}</li>}\n      </ul>\n    );\n\n    const renderSections = ({ fields, meta: { error } }) => (\n      \n      <ul className=\"dynamic-form cards-list\">\n        <li>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary ml-auto\"\n            onClick={() => fields.push()}\n          >\n            Add Section\n          </button>\n        </li>\n        {fields.map((section, index) => (\n          <li key={index}>\n            <span className=\"bullet-list__number\">{index + 1}</span>\n            <div className=\"dynamic-form__fields--container\">\n            <Field\n                name={`${section}.image`}\n                type=\"text\"\n                placeholder=\"Section Image\"\n                component={renderField}\n                label={`Section Image #${index + 1}`}\n                className={displayFields(['full-width'])}\n              />\n              <Field\n                name={`${section}.heading`}\n                type=\"text\"\n                placeholder=\"Section Heading\"\n                component={renderField}\n                label={`Section Heading #${index + 1}`}\n              />\n              <Field\n                name={`${section}.subheading`}\n                type=\"text\"\n                placeholder=\"Section Subheading\"\n                component={renderField}\n                label={`Section Subheading #${index + 1}`}\n              />\n              <Field\n                name={`${section}.content`}\n                type=\"text\"\n                placeholder=\"Card Content\"\n                component={renderField}\n                label={`Section Content #${index + 1}`}\n              />\n            </div>\n            <button\n              className=\"btn btn-danger btn-remove\"\n              type=\"button\"\n              title=\"Remove Card Item\"\n              onClick={() => fields.remove(index)}\n            >\n              &times;\n            </button>\n          </li>\n        ))}\n        {error && <li className=\"error\">{error}</li>}\n      </ul>\n    );\n\n    const { handleSubmit } = this.props;\n    return (\n      <form className=\"form pt-5 pb-5\" onSubmit={handleSubmit}>\n        <div id=\"step-1\">\n          <h3 className=\"pb-2\">1) Select a template:</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"templateSelect\">Template Select:</label>\n            <div className=\"w-100\">\n              <Field\n                className=\"custom-select\"\n                name=\"templateSelect\"\n                component=\"select\"\n              >\n                <option>-- Select Template --</option>\n                <option value=\"bare\">Bare</option>\n                <option value=\"business\">Business Front Page</option>\n                <option value=\"full-width\">Full Width</option>\n                <option value=\"scrolling-nav\">Scrolling Nav</option>\n                <option value=\"full-screen\">Full Screen Image</option>\n              </Field>\n            </div>\n          </div>\n        </div>\n        <hr className=\"mt-5\"></hr>\n        <div id=\"step-2\">\n          <h3 className=\"pb-2 pt-4\">2) Fill in the following fields:</h3>\n          <div className=\"form-group\">\n            <label htmlFor=\"siteTitle\">Site Title:</label>\n            <Field\n              className=\"input form-control\"\n              name=\"siteTitle\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Site Title\"\n            />\n          </div>\n          <div className={`form-group ${displayFields(['full-screen', 'business', 'scrolling-nav'])}`}>\n            <label htmlFor=\"headerImage\">Header Image:</label>\n            <Field\n              className=\"input form-control\"\n              name=\"headerImage\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"http://placehold.it/1200x600\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"heading\">Heading:</label>\n            <Field\n              className=\"input form-control\"\n              name=\"heading\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Heading\"\n            />\n          </div>\n          <div className={`form-group ${displayFields(['bare', 'business', 'scrolling-nav'])}`}>\n            <label htmlFor=\"subheading\">Subheading:</label>\n            <Field\n              className=\"input form-control\"\n              name=\"subheading\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Subheading\"\n            />\n          </div>\n          <div className={`form-group ${displayFields(['business'])}`}>\n            <label htmlFor=\"bodyHeading\">Body Heading:</label>\n            <Field\n              className=\"input form-control\"\n              name=\"bodyHeading\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Body Heading\"\n            />\n          </div>\n          <div className={`form-group ${displayFields(['business', 'bare', 'full-screen'])}`}>\n            <label htmlFor=\"bodyContent\">Body Content:</label>\n            <Field\n              className=\"input form-control\"\n              name=\"bodyContent\"\n              component=\"textarea\"\n              type=\"text\"\n              placeholder=\"Body Content\"\n            />\n          </div>\n          <div className={`card ${displayFields(['business'])}`}>\n            <div className=\"card-header\">\n              Body Call to Action\n            </div>\n            <div className=\"card-body\">\n                <div className=\"form-group\">\n                <label htmlFor=\"bodyContent\">CTA Text:</label>\n                  <Field\n                    className=\"input form-control\"\n                    name=\"ctaText\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"CTA Text\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"bodyContent\">CTA URL:</label>\n                  <Field\n                    className=\"input form-control\"\n                    name=\"ctaURL\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"CTA URL\"\n                  />\n                </div>\n            </div>\n          </div>\n          <div className={`card ${displayFields(['business'])}`}>\n            <div className=\"card-header\">\n              Contact Info\n            </div>\n            <div className=\"card-body\">\n                <div className=\"form-group\">\n                <label htmlFor=\"address1\">Address #1:</label>\n                  <Field\n                    className=\"input form-control\"\n                    name=\"address1\"\n                    component=\"input\"\n                    type=\"address\"\n                    placeholder=\"Address #1\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"address2\">Address #2:</label>\n                  <Field\n                    className=\"input form-control\"\n                    name=\"address2\"\n                    component=\"input\"\n                    type=\"text\"\n                    placeholder=\"Address #2\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"city\">City:</label>\n                  <Field\n                    className=\"input form-control\"\n                    name=\"city\"\n                    component=\"input\"\n                    type=\"city\"\n                    placeholder=\"City\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"state\">State:</label>\n                  <Field\n                    className=\"input form-control\"\n                    name=\"state\"\n                    component=\"input\"\n                    type=\"state\"\n                    placeholder=\"State\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"zipcode\">Zipcode:</label>\n                  <Field\n                    className=\"input form-control\"\n                    name=\"zipcode\"\n                    component=\"input\"\n                    type=\"zipcode\"\n                    placeholder=\"Zip\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"phone\">Phone:</label>\n                  <Field\n                    className=\"input form-control\"\n                    name=\"phone\"\n                    component=\"input\"\n                    type=\"phone\"\n                    placeholder=\"(111) 111 1111\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                <label htmlFor=\"email\">Email:</label>\n                  <Field\n                    className=\"input form-control\"\n                    name=\"email\"\n                    component=\"input\"\n                    type=\"email\"\n                    placeholder=\"email@company.com\"\n                  />\n                </div>\n            </div>\n          </div>\n          <div\n            className=\"card\"\n          >\n            <div className=\"card-header\">\n              Nav Items\n            </div>\n            <div className=\"card-body\">\n              <div className=\"form-group\">\n                <FieldArray name=\"navItems\" component={renderNavItems} />\n              </div>\n            </div>\n          </div>\n          <div\n            className={`card ${displayFields(['full-width', 'scrolling-nav'])}`}\n          >\n            <div className=\"card-header\">\n              Sections\n            </div>\n            <div className=\"card-body\">\n              <div className=\"form-group\">\n                <FieldArray name=\"sections\" component={renderSections} />\n              </div>\n            </div>\n          </div>\n          <div\n            className={`card ${displayFields(['business'])}`}\n          >\n            <div className=\"card-header\">\n              Cards\n            </div>\n            <div className=\"card-body\">\n              <div className=\"form-group\">\n                <FieldArray name=\"cards\" component={renderCards} />\n              </div>\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary w-100\">\n            GET CODE\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst initialValues = {\n  templateSelect: \"\",\n  siteTitle: \"Site Title\",\n  heading: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit.\",\n  headerImage:\n    \"http://placehold.it/1200x600\",\n  subheading:\n    \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam at commodi...\",\n  assetThumb:\n    \"http://placehold.it/300\",\n  bodyHeading: \"What We Do\",\n  bodyContent:\n    \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cum debitis deserunt dolore et fugiat hic incidunt nemo nulla, numquam odio praesentium provident qui repellat rerum sed temporibus ullam voluptatem. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolore eaque, esse fugit laboriosam reiciendis reprehenderit repudiandae voluptate voluptatem? Ad autem consequuntur culpa dolorem id labore officia quia recusandae saepe veniam.\",\n  address1: '1234 Some Rd.',\n  address2: '',\n  city: 'Austin',\n  state: 'TX',\n  zipcode: '78701',\n  phone: '(111) 111-1111',\n  email: 'email@gmail.com',\n  ctaText: 'Learn More',\n  ctaURL: '#',\n  cards: [\n    {\n      title: \"Card 1\",\n      image: \"http://placehold.it/100\",\n      body: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n      link: {\n        text: \"Learn More\",\n        url: \"\"\n      }\n    },\n    {\n      title: \"Card 2\",\n      image: \"http://placehold.it/100\",\n      body: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n      link: {\n        text: \"Learn More\",\n        url: \"\"\n      }\n    },\n    {\n      title: \"Card 3\",\n      image: \"http://placehold.it/100\",\n      body: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n      link: {\n        text: \"Learn More\",\n        url: \"\"\n      }\n    },\n    {\n      title: \"Card 4\",\n      image: \"http://placehold.it/100\",\n      body: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n      link: {\n        text: \"Learn More\",\n        url: \"\"\n      }\n    }\n  ],\n  sections: [\n    {\n      heading: \"Section 1\",\n      subheading: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n      image: \"http://placehold.it/100\",\n      text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n    },\n    {\n      heading: \"Section 2\",\n      subheading: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n      image: \"http://placehold.it/100\",\n      text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\"\n    },\n  ],\n  navItems: [\n    {\n      item: \"About\",\n    },\n    {\n      item: \"Services\",\n    },\n    {\n      item: \"Contact\",\n    }\n  ]\n};\n\nconst mapStateToProps = state => ({\n  templateSelect: formValueSelector(\"lpForm\")(state, \"templateSelect\")\n});\n\nForm = reduxForm({\n  form: \"lpForm\",\n  initialValues\n})(Form);\n\nexport default connect(mapStateToProps)(Form);\n","import React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { connect } from \"react-redux\";\nimport { formValueSelector } from \"redux-form\";\nimport \"./css/PagePreview.scss\";\n\nlet output; // rendered component html\n\nclass PagePreview extends React.Component {\n\n  render() {\n    // init vars\n    let htmlOutput = <div className=\"placeholderHTML\">[SELECT A TEMPLATE]</div>;\n\n    const displayBulletList = list => {\n      return list.map((val, index) => {\n        return <li key={index}>{val}</li>;\n      });\n    };\n\n    const displayAssetList = list => {\n      // eslint-disable-next-line array-callback-return\n      return list.map((val, index) => {\n        if (val !== undefined) {\n          return (\n            <div key={index} className=\"col-12 col-md-6\">\n              <img src={val.image} alt={val.title} />\n              <p>{val.title}</p>\n            </div>\n          );\n        }\n      });\n    };\n\n    const displayNavItems = list => {\n      // eslint-disable-next-line array-callback-return\n      return list.map((val, index) => {\n        if (val !== undefined) {\n          return (\n            <li key={index} className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">{val.item}\n              <span className=\"sr-only\"></span>\n              </a>\n            </li>\n          );\n        }\n      });\n    };\n\n    const displayCards = card => {\n      return card.map((val, index) => {\n        if (val !== undefined) {\n          return (\n            <div className=\"col-md-4 mb-5\">\n              <div className=\"card h-100\">\n                <img className=\"card-img-top\" src={val.image} alt={val.title} />\n                <div className=\"card-body\">\n                  <h4 className=\"card-title\">{val.title}</h4>\n                  <p className=\"card-text\">{val.body}</p>\n                </div>\n                <div className=\"card-footer\">\n                  <a href={val.link.url} className=\"btn btn-primary d-block\">{val.link.text}</a>\n                </div>\n              </div>\n            </div>\n          )\n        }\n      });\n    }\n\n    const displayFullWidthSections = section => {\n      return section.map((val, index) => {\n        if (val !== undefined) {\n          return (\n            <>\n            <div className=\"py-5 bg-image-full\" style={{ backgroundImage: `url(${val.image})` }}>\n              <div style={{ height: \"200px\" }}></div>\n            </div>\n            <section className=\"py-5\">\n              <div className=\"container\">\n                <h1>{val.heading}</h1>\n                <p className=\"lead\">{val.subheading}</p>\n                <p>{val.text}</p>\n              </div>\n            </section>\n            </>\n          )\n        }\n      });\n    }\n\n    const displaySections = section => {\n      return section.map((val, index) => {\n        if (val !== undefined) {\n          return (\n          <section id=\"about\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 mx-auto\">\n                  <h2>{val.heading}</h2>\n                  <p className=\"lead\">{val.subheading}</p>\n                  <p>{val.text}</p>\n                </div>\n              </div>\n            </div>\n          </section>\n          )\n        }\n      });\n    }\n\n    const htmlStylesheets = `<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css\">\n    `\n\n    const htmlScripts = `\n    <script\n    src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"\n    integrity=\"sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs=\"\n    crossorigin=\"anonymous\"></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>`\n\n    if (this.props.templateSelect === \"bare\") {\n      htmlOutput = (\n        <>\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark static-top\">\n            <div className=\"container\">\n              <a className=\"navbar-brand\" href=\"#\">{this.props.siteTitle}</a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"#\">Home\n                    <span className=\"sr-only\">(current)</span>\n                    </a>\n                  </li>\n                  {displayNavItems(this.props.navItems)}\n                </ul>\n              </div>\n            </div>\n          </nav>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 text-center\">\n                <h1 className=\"mt-5\">{this.props.heading}</h1>\n                <p className=\"lead\">{this.props.subheading}</p>\n                <p className=\"main-content\">{this.props.bodyContent}</p>\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.props.templateSelect === \"business\") {\n\n      htmlOutput = (\n\n        <div id={this.props.templateSelect}>\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n            <div className=\"container\">\n              <a className=\"navbar-brand\" href=\"#\">{this.props.siteTitle}</a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"#\">Home\n                    <span className=\"sr-only\">(current)</span>\n                    </a>\n                  </li>\n                  {displayNavItems(this.props.navItems)}\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <header className=\"bg-primary py-5 mb-5\">\n            <div className=\"container h-100\">\n              <div className=\"row h-100 align-items-center\">\n                <div className=\"col-lg-12\">\n                  <h1 className=\"display-4 text-white mt-5 mb-2\">{this.props.heading}</h1>\n                  <p className=\"lead mb-5 text-white-50\">{this.props.subheading}</p>\n                </div>\n              </div>\n            </div>\n          </header>\n\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 mb-5\">\n                <h2>{this.props.bodyHeading}</h2>\n                <hr />\n                <p>{this.props.bodyContent}</p>\n                <a className=\"btn btn-primary btn-lg\" href={this.props.ctaURL}>{this.props.ctaText}</a>\n              </div>\n              <div className=\"col-md-4 mb-5\">\n                <h2>Contact Us</h2>\n                <hr />\n                <div>\n                  <strong>{this.props.siteTitle}</strong>\n                  <br />{this.props.address1}\n                  <br />{this.props.address2}\n                  <br />{this.props.city} {(this.props.state) ? `, ${this.props.state}` : ''} {this.props.zipcode}\n                  <br />\n                </div>\n                <div>\n                  <abbr title=\"Phone\">P: </abbr>\n                  {this.props.phone}\n                    <br />\n                  <abbr title=\"Email\">E: </abbr>\n                  <a href=\"mailto:#\">{this.props.email}</a>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              {displayCards(this.props.cards)}\n            </div>\n          </div>\n\n          <footer className=\"py-5 bg-dark\">\n            <div className=\"container\">\n              <p className=\"m-0 text-center text-white\">Copyright &copy; Your Website 2020</p>\n            </div>\n          </footer>\n        </div>\n      );\n    } else if (this.props.templateSelect === \"full-width\") {\n\n\n      htmlOutput = (\n        <div id={this.props.templateSelect}>\n\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n            <div className=\"container\">\n              <a className=\"navbar-brand\" href=\"#\">{this.props.siteTitle}</a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"#\">Home\n            <span className=\"sr-only\">(current)</span>\n                    </a>\n                  </li>\n                  {displayNavItems(this.props.navItems)}\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          {displayFullWidthSections(this.props.sections)}\n\n          <footer className=\"py-5 bg-dark\">\n            <div className=\"container\">\n              <p className=\"m-0 text-center text-white\">Copyright &copy; Your Website 2020</p>\n            </div>\n          </footer>\n\n\n        </div>\n      );\n    } else if (this.props.templateSelect === \"scrolling-nav\") {\n\n\n      htmlOutput = (\n        <div id={this.props.templateSelect}>\n\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\" id=\"mainNav\">\n            <div className=\"container\">\n              <a className=\"navbar-brand js-scroll-trigger\" href=\"#page-top\">Start Bootstrap</a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link js-scroll-trigger\" href=\"#about\">About</a>\n                  </li>\n                  {displayNavItems(this.props.navItems)}\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <header className=\"bg-primary text-white\">\n            <div className=\"container text-center\">\n              <h1>Welcome to Scrolling Nav</h1>\n              <p className=\"lead\">A landing page template freshly redesigned for Bootstrap 4</p>\n            </div>\n          </header>\n\n          {displaySections(this.props.sections)}\n\n          <footer className=\"py-5 bg-dark\">\n            <div className=\"container\">\n              <p className=\"m-0 text-center text-white\">Copyright &copy; Your Website 2020</p>\n            </div>\n          </footer>\n\n\n          {/* TODO: figure out a way to add script, or just add js code output */}\n          {/* <script>\n          !function(e){\"use strict\";e('a.js-scroll-trigger[href*=\"#\"]:not([href=\"#\"])').click(function(){if(location.pathname.replace(/^\\//,\"\")==this.pathname.replace(/^\\//,\"\")&&location.hostname==this.hostname){var t=e(this.hash);if((t=t.length?t:e(\"[name=\"+this.hash.slice(1)+\"]\")).length)return e(\"html, body\").animate({scrollTop:t.offset().top-56},1e3,\"easeInOutExpo\"),!1}}),e(\".js-scroll-trigger\").click(function(){e(\".navbar-collapse\").collapse(\"hide\")}),e(\"body\").scrollspy({target:\"#mainNav\",offset:56})}(jQuery);\n          </script> */}\n\n        </div>\n      );\n    } else if (this.props.templateSelect === \"full-screen\") {\n\n\n      htmlOutput = htmlOutput = (\n        <div id={this.props.templateSelect}>\n\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-bottom\">\n            <div className=\"container\">\n              <a className=\"navbar-brand\" href=\"#\">{this.props.siteTiel}</a>\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n              <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                <ul className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"#\">Home\n            <span className=\"sr-only\">(current)</span>\n                    </a>\n                  </li>\n                  {displayNavItems(this.props.navItems)}\n                </ul>\n              </div>\n            </div>\n          </nav>\n\n          <section>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-lg-6\">\n                  <h1 className=\"mt-5\">{this.props.heading}</h1>\n                  <p>{this.props.bodyContent}</p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n        </div>\n      );\n    } else {\n      htmlOutput = htmlOutput = (\n        <div id=\"placeholderHTML\">[SELECT A TEMPLATE]</div>\n      );\n    }\n\n    output += htmlStylesheets;\n    output += ReactDOMServer.renderToStaticMarkup(htmlOutput)\n    .concat(htmlScripts);\n    ;\n\n\n    return htmlOutput;\n  }\n}\n\nconst mapStateToProps = state => ({\n  html: (state.html.output = output),\n  templateSelect: formValueSelector(\"lpForm\")(state, \"templateSelect\"),\n  siteTitle: formValueSelector(\"lpForm\")(state, \"siteTitle\"),\n  heading: formValueSelector(\"lpForm\")(state, \"heading\"),\n  headerImage: formValueSelector(\"lpForm\")(state, \"headerImage\"),\n  subheading: formValueSelector(\"lpForm\")(state, \"subheading\"),\n  bodyHeading: formValueSelector(\"lpForm\")(state, \"bodyHeading\"),\n  bodyContent: formValueSelector(\"lpForm\")(state, \"bodyContent\"),\n  cards: formValueSelector(\"lpForm\")(state, \"cards\"),\n  navItems: formValueSelector(\"lpForm\")(state, \"navItems\"),\n  sections: formValueSelector(\"lpForm\")(state, \"sections\"),\n  ctaText: formValueSelector(\"lpForm\")(state, \"ctaText\"),\n  ctaURL: formValueSelector(\"lpForm\")(state, \"ctaURL\"),\n  address1: formValueSelector(\"lpForm\")(state, \"address1\"),\n  address2: formValueSelector(\"lpForm\")(state, \"address2\"),\n  state: formValueSelector(\"lpForm\")(state, \"state\"),\n  city: formValueSelector(\"lpForm\")(state, \"city\"),\n  zipcode: formValueSelector(\"lpForm\")(state, \"zipcode\"),\n  phone: formValueSelector(\"lpForm\")(state, \"phone\"),\n  email: formValueSelector(\"lpForm\")(state, \"email\")\n});\n\nexport default connect(mapStateToProps)(PagePreview);\n","export const styles = {\n    \"full-screen\": `body{background:url(http://placehold.it/1920x1080) no-repeat center center fixed;-webkit-background-size:cover;-moz-background-size:cover;background-size:cover;-o-background-size:cover}`,\n    \"business\": `body{padding-top:56px}`,\n    \"full-width\": `body{padding-top:56px}.bg-image-full{background:no-repeat center center scroll;-webkit-background-size:cover;-moz-background-size:cover;background-size:cover;-o-background-size:cover}`,\n    \"scrolling-nav\": `header{padding:156px 0 100px}section{padding:150px 0}`\n}\n\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Prism from \"prismjs\";\nimport ClipboardJS from \"clipboard\";\nimport { styles } from \"../data/styles\";\nimport \"./css/prism.scss\";\nimport \"./css/CodeOutput.scss\";\n\nclass CodeOutput extends React.Component {\n\n  componentDidUpdate() {\n    Prism.highlightAll();\n  }\n\n  render() {\n    new ClipboardJS('.btn');\n    return (\n      <div className=\"codeOutput pt-5 pb-5\">\n        <div className=\"htmlOutput\">\n          <h2>HTML:</h2>\n          <div className=\"htmlOutput__code\">\n            <div className=\"toolbar bg-secondary\">\n            <button className=\"btn secondary\" data-clipboard-target=\"#html\">\n                Copy\n            </button>\n            </div>\n            <pre>\n              <code id=\"html\" className=\"language-html\">{this.props.html}</code>\n            </pre>\n          </div>\n        </div>\n        <div className=\"cssOutput mt-5\">\n          <h2>CSS:</h2>\n          <div className=\"cssOutput__code\">\n            <div className=\"toolbar bg-secondary\">\n            <button className=\"btn\" data-clipboard-target=\"#css\">\n                Copy\n            </button>\n            </div>\n            <pre>\n              <code id=\"css\" className=\"language-css\">{styles[this.props.css]}</code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    html: state.html.output,\n    css: state.form.lpForm.values.templateSelect\n  };\n};\n\nexport default connect(mapStateToProps)(CodeOutput);\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport PagePreview from \"./PagePreview\";\nimport CodeOutput from \"./CodeOutput\";\nimport \"./css/App.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showCodeOutput: false\n    };\n  }\n\n  handleForm = values => {\n    window.location.hash = '';\n    window.location.hash = 'codeOutput';\n    this.setState({ form: values });\n  };\n\n  render() {\n      return (\n        <div className=\"App\">\n          <div className=\"header bg-light pt-4 pb-4\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <Header />\n              </div>\n            </div>\n          </div>\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Form onSubmit={this.handleForm} />\n              </div>\n              <div\n                id=\"pagePreview\"\n                className=\"col-md-6\"\n                style={{ backgroundColor: \"gray\" }}\n              >\n                <div className=\"pagePreview__container position-sticky fixed-top\">\n                  <PagePreview form={this.state.form} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div id=\"codeOutput\" className=\"container\">\n            <hr className=\"mt-5\"></hr>\n            <CodeOutput html={this.state.html} />\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers } from \"redux\";\nimport { reducer as formReducer } from 'redux-form';\nimport reducer from './reducers';\n\nimport App from './components/App';\n\nconst rootReducer = combineReducers({\n    form: formReducer,\n    html: reducer\n  });\n\nexport const store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.querySelector('#root'),\n);\n"],"sourceRoot":""}